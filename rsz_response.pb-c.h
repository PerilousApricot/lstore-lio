/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_rsz_5fresponse_2eproto__INCLUDED
#define PROTOBUF_C_rsz_5fresponse_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "rsz_req.pb-c.h"
#include "rsz_cap.pb-c.h"

typedef struct _Rs__Zmq__RszResponse Rs__Zmq__RszResponse;


/* --- enums --- */


/* --- messages --- */

struct  _Rs__Zmq__RszResponse
{
  ProtobufCMessage base;
  size_t n_cap;
  Rs__Zmq__RszCapSet **cap;
  size_t n_req;
  Rs__Zmq__RszReqSet **req;
};
#define RS__ZMQ__RSZ_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rs__zmq__rsz_response__descriptor) \
    , 0,NULL, 0,NULL }


/* Rs__Zmq__RszResponse methods */
void   rs__zmq__rsz_response__init
                     (Rs__Zmq__RszResponse         *message);
size_t rs__zmq__rsz_response__get_packed_size
                     (const Rs__Zmq__RszResponse   *message);
size_t rs__zmq__rsz_response__pack
                     (const Rs__Zmq__RszResponse   *message,
                      uint8_t             *out);
size_t rs__zmq__rsz_response__pack_to_buffer
                     (const Rs__Zmq__RszResponse   *message,
                      ProtobufCBuffer     *buffer);
Rs__Zmq__RszResponse *
       rs__zmq__rsz_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rs__zmq__rsz_response__free_unpacked
                     (Rs__Zmq__RszResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Rs__Zmq__RszResponse_Closure)
                 (const Rs__Zmq__RszResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rs__zmq__rsz_response__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_rsz_5fresponse_2eproto__INCLUDED */
